{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Freelance\\\\client\\\\alpha-nutrition\\\\src\\\\context\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\n// import { createContext, useState, useEffect } from \"react\";\n// import {\n//   onAuthStateChangedListener,\n//   createUserDocumentFromAuth,\n// } from \"../utils/firebase/firebase.utils\";\n\n// export const UserContext = createContext({\n//   setCurrentUser: () => null,\n//   currentUser: null,\n// });\n\n// export const UserProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const value = { currentUser, setCurrentUser };\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChangedListener(async (user) => {\n//       if (user) {\n//         const userDoc = await createUserDocumentFromAuth(user);\n//         const userSnapshot = await userDoc.get();\n//         const userData = userSnapshot.data();\n\n//         setCurrentUser({\n//           ...user,\n//           isAdmin: userData.isAdmin, // Assuming you have an 'isAdmin' field in your user document\n//         });\n//       } else {\n//         setCurrentUser(user);\n//       }\n//     });\n\n//     return unsubscribe;\n//   }, []);\n\n//   return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n// };\n\n// import { createContext, useState, useEffect } from \"react\";\n// import {\n//   onAuthStateChangedListener,\n//   createUserDocumentFromAuth,\n// } from \"../utils/firebase/firebase.utils\";\n// import { getDoc } from \"firebase/firestore\";\n\n// export const UserContext = createContext({\n//   setCurrentUser: () => null,\n//   currentUser: null,\n//   temporaryUserCredentials: [],\n//   setTemporaryUserCredentials: () => null,\n// });\n\n// export const UserProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [temporaryUserCredentials, setTemporaryUserCredentials] = useState([]); // Array to store user credentials\n\n//   const value = {\n//     currentUser,\n//     setCurrentUser,\n//     temporaryUserCredentials,\n//     setTemporaryUserCredentials,\n//   };\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChangedListener(async (user) => {\n//       if (user) {\n//         const userDocRef = await createUserDocumentFromAuth(user);\n//         const userSnapshot = await getDoc(userDocRef);\n//         const userData = userSnapshot.data();\n\n//         const userCredentials = {\n//           uid: user.uid,\n//           displayName: user.displayName,\n//           email: user.email,\n//           isAdmin: userData?.isAdmin, // Assuming you have an 'isAdmin' field in your user document\n//         };\n\n//         setCurrentUser(userCredentials);\n\n//         // Add user credentials to temporary storage\n//         setTemporaryUserCredentials((prevCredentials) => [\n//           ...prevCredentials,\n//           userCredentials,\n//         ]);\n//       } else {\n//         setCurrentUser(user);\n//       }\n//     });\n\n//     return unsubscribe;\n//   }, []);\n\n//   return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n// };\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener } from \"../utils/firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null,\n  sessionUserInfo: [],\n  setSessionUserInfo: () => null\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [sessionUserInfo, setSessionUserInfo] = useState([]);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      setCurrentUser(user);\n      if (user) {\n        setSessionUserInfo([{\n          uid: user.uid,\n          email: user.email\n        }]);\n      } else {\n        setSessionUserInfo([]);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    setCurrentUser,\n    sessionUserInfo,\n    setSessionUserInfo\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n_s(UserProvider, \"PWqpzAdm207r6/7pIjS5fByhR1g=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","onAuthStateChangedListener","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","sessionUserInfo","setSessionUserInfo","UserProvider","children","_s","unsubscribe","user","uid","email","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Freelance/client/alpha-nutrition/src/context/UserContext.jsx"],"sourcesContent":["// import { createContext, useState, useEffect } from \"react\";\r\n// import {\r\n//   onAuthStateChangedListener,\r\n//   createUserDocumentFromAuth,\r\n// } from \"../utils/firebase/firebase.utils\";\r\n\r\n// export const UserContext = createContext({\r\n//   setCurrentUser: () => null,\r\n//   currentUser: null,\r\n// });\r\n\r\n// export const UserProvider = ({ children }) => {\r\n//   const [currentUser, setCurrentUser] = useState(null);\r\n//   const value = { currentUser, setCurrentUser };\r\n\r\n//   useEffect(() => {\r\n//     const unsubscribe = onAuthStateChangedListener(async (user) => {\r\n//       if (user) {\r\n//         const userDoc = await createUserDocumentFromAuth(user);\r\n//         const userSnapshot = await userDoc.get();\r\n//         const userData = userSnapshot.data();\r\n\r\n//         setCurrentUser({\r\n//           ...user,\r\n//           isAdmin: userData.isAdmin, // Assuming you have an 'isAdmin' field in your user document\r\n//         });\r\n//       } else {\r\n//         setCurrentUser(user);\r\n//       }\r\n//     });\r\n\r\n//     return unsubscribe;\r\n//   }, []);\r\n\r\n//   return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n// };\r\n\r\n// import { createContext, useState, useEffect } from \"react\";\r\n// import {\r\n//   onAuthStateChangedListener,\r\n//   createUserDocumentFromAuth,\r\n// } from \"../utils/firebase/firebase.utils\";\r\n// import { getDoc } from \"firebase/firestore\";\r\n\r\n// export const UserContext = createContext({\r\n//   setCurrentUser: () => null,\r\n//   currentUser: null,\r\n//   temporaryUserCredentials: [],\r\n//   setTemporaryUserCredentials: () => null,\r\n// });\r\n\r\n// export const UserProvider = ({ children }) => {\r\n//   const [currentUser, setCurrentUser] = useState(null);\r\n//   const [temporaryUserCredentials, setTemporaryUserCredentials] = useState([]); // Array to store user credentials\r\n\r\n//   const value = {\r\n//     currentUser,\r\n//     setCurrentUser,\r\n//     temporaryUserCredentials,\r\n//     setTemporaryUserCredentials,\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const unsubscribe = onAuthStateChangedListener(async (user) => {\r\n//       if (user) {\r\n//         const userDocRef = await createUserDocumentFromAuth(user);\r\n//         const userSnapshot = await getDoc(userDocRef);\r\n//         const userData = userSnapshot.data();\r\n\r\n//         const userCredentials = {\r\n//           uid: user.uid,\r\n//           displayName: user.displayName,\r\n//           email: user.email,\r\n//           isAdmin: userData?.isAdmin, // Assuming you have an 'isAdmin' field in your user document\r\n//         };\r\n\r\n//         setCurrentUser(userCredentials);\r\n\r\n//         // Add user credentials to temporary storage\r\n//         setTemporaryUserCredentials((prevCredentials) => [\r\n//           ...prevCredentials,\r\n//           userCredentials,\r\n//         ]);\r\n//       } else {\r\n//         setCurrentUser(user);\r\n//       }\r\n//     });\r\n\r\n//     return unsubscribe;\r\n//   }, []);\r\n\r\n//   return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n// };\r\n\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport { onAuthStateChangedListener } from \"../utils/firebase/firebase.utils\";\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => null,\r\n  sessionUserInfo: [],\r\n  setSessionUserInfo: () => null,\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [sessionUserInfo, setSessionUserInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangedListener((user) => {\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        setSessionUserInfo([{ uid: user.uid, email: user.email }]);\r\n      } else {\r\n        setSessionUserInfo([]);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    setCurrentUser,\r\n    sessionUserInfo,\r\n    setSessionUserInfo,\r\n  };\r\n\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,0BAA0B,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EACvCO,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM,IAAI;EAC1BC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAEA,CAAA,KAAM;AAC5B,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGX,0BAA0B,CAAEY,IAAI,IAAK;MACvDP,cAAc,CAACO,IAAI,CAAC;MACpB,IAAIA,IAAI,EAAE;QACRL,kBAAkB,CAAC,CAAC;UAAEM,GAAG,EAAED,IAAI,CAACC,GAAG;UAAEC,KAAK,EAAEF,IAAI,CAACE;QAAM,CAAC,CAAC,CAAC;MAC5D,CAAC,MAAM;QACLP,kBAAkB,CAAC,EAAE,CAAC;MACxB;IACF,CAAC,CAAC;IACF,OAAOI,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAG;IACZX,WAAW;IACXC,cAAc;IACdC,eAAe;IACfC;EACF,CAAC;EAED,oBAAOL,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAN,QAAA,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACV,EAAA,CAxBWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}