{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getDoc, getFirestore, setDoc, doc } from \"firebase/firestore\";\nconst mongoose = require(\"mongoose\");\nconst User = require(\"../models/user.models\");\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAqQmkeUEkqZncA9PBKcN2z54i71goKBvw\",\n  authDomain: \"alpha-nutrition-supplements.firebaseapp.com\",\n  projectId: \"alpha-nutrition-supplements\",\n  storageBucket: \"alpha-nutrition-supplements.appspot.com\",\n  messagingSenderId: \"173511615944\",\n  appId: \"1:173511615944:web:ba63e1ad8d4f2ec3cfccfd\",\n  measurementId: \"G-W07ZHNF9ZK\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n      // Save user in MongoDB\n      const user = new User({\n        uid: userAuth.uid,\n        displayName,\n        email,\n        createdAt\n      });\n      await user.save();\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n  await createUserDocumentFromAuth(userCredential.user);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const sendRequest = async () => {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (user) {\n    const token = await user.getIdToken();\n    fetch(\"http://localhost:9000/api/users/me\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","getDoc","getFirestore","setDoc","doc","mongoose","require","User","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","user","save","error","console","log","message","createAuthUserWithEmailAndPassword","password","userCredential","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","sendRequest","currentUser","token","getIdToken","fetch","method","headers","Authorization","then","response","json","data","catch"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Freelance/client/alpha-nutrition/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithRedirect,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { getDoc, getFirestore, setDoc, doc } from \"firebase/firestore\";\r\nconst mongoose = require(\"mongoose\");\r\nconst User = require(\"../models/user.models\");\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAqQmkeUEkqZncA9PBKcN2z54i71goKBvw\",\r\n  authDomain: \"alpha-nutrition-supplements.firebaseapp.com\",\r\n  projectId: \"alpha-nutrition-supplements\",\r\n  storageBucket: \"alpha-nutrition-supplements.appspot.com\",\r\n  messagingSenderId: \"173511615944\",\r\n  appId: \"1:173511615944:web:ba63e1ad8d4f2ec3cfccfd\",\r\n  measurementId: \"G-W07ZHNF9ZK\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\nexport const signInWithGoogleRedirect = () =>\r\n  signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n      // Save user in MongoDB\r\n      const user = new User({\r\n        uid: userAuth.uid,\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n      });\r\n      await user.save();\r\n    } catch (error) {\r\n      console.log(\"error creating the user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userDocRef;\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  const userCredential = await createUserWithEmailAndPassword(\r\n    auth,\r\n    email,\r\n    password\r\n  );\r\n  await createUserDocumentFromAuth(userCredential.user);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\nexport const sendRequest = async () => {\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const token = await user.getIdToken();\r\n    fetch(\"http://localhost:9000/api/users/me\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}