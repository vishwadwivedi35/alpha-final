{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Freelance\\\\client\\\\alpha-nutrition\\\\src\\\\pages\\\\Error.jsx\",\n  _s = $RefreshSig$();\nimport { useRouteError } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Error = () => {\n  _s();\n  const error = useRouteError();\n  console.log(error);\n  if (error.state === 400) {}\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" there was error... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(Error, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = Error;\nexport default Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["useRouteError","jsxDEV","_jsxDEV","Error","_s","error","console","log","state","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Freelance/client/alpha-nutrition/src/pages/Error.jsx"],"sourcesContent":["import { useRouteError } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n  const error = useRouteError();\r\n  console.log(error);\r\n\r\n  if (error.state === 400) {\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h4> there was error... </h4>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAGL,aAAa,CAAC,CAAC;EAC7BM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,IAAIA,KAAK,CAACG,KAAK,KAAK,GAAG,EAAE,CACzB;EAEA,oBACEN,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEX,CAAC;AAACT,EAAA,CAZID,KAAK;EAAA,QACKH,aAAa;AAAA;AAAAc,EAAA,GADvBX,KAAK;AAcX,eAAeA,KAAK;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}